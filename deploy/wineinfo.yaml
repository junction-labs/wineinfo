---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wineinfo-config
data:
  DATA_PATH: /app/data/gen
  JUNCTION_ADS_SERVER: "grpc://relay.junction:8009"
  USE_JUNCTION: "true"
  SEARCH_SERVICE: "http://wineinfo-search"
  EMBEDDINGS_SERVICE: "http://wineinfo-embeddings"
  PERSIST_SERVICE: "http://wineinfo-persist"
  SOMMELIER_SERVICE: "http://wineinfo-sommelier"
  NEXTAUTH_URL: "http://localhost:8010"
  COLUMNS: "9999" # Helps FastAPI logs not wrap lines
  OPENAI_API_KEY: "" # Will be overridden by secret if available
  OPENAI_MODEL: "gpt-4"
  OPENAI_TEMPERATURE: "0.7"
  OPENAI_MAX_TOKENS: "1500"
  OPENAI_TOOL_CHOICE: "auto"
  OPENAI_BASE_URL: "https://api.openai.com/v1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wineinfo-frontend
  labels:
    app: wineinfo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wineinfo
      service: frontend
  template:
    metadata:
      labels:
        app: wineinfo
        service: frontend
    spec:
      containers:
        - name: wineinfo-frontend
          image: wineinfo-frontend:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: wineinfo-config
          command: ["npm", "run", "dev", "--", "--hostname", "0.0.0.0"]
---
apiVersion: v1
kind: Service
metadata:
  name: wineinfo-frontend
spec:
  type: NodePort
  selector:
    app: wineinfo
    service: frontend
  ports:
    - nodePort: 30010
      port: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wineinfo-persist
  labels:
    app: wineinfo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wineinfo
      service: persist
  template:
    metadata:
      labels:
        app: wineinfo
        service: persist
    spec:
      containers:
        - name: main
          image: wineinfo-python:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              "fastapi",
              "run",
              "/app/persist_app.py",
              "--host",
              "0.0.0.0",
              "--port",
              "80",
            ]
          envFrom:
            - configMapRef:
                name: wineinfo-config
---
apiVersion: v1
kind: Service
metadata:
  name: wineinfo-persist
spec:
  type: ClusterIP
  selector:
    app: wineinfo
    service: persist
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wineinfo-embeddings
  labels:
    app: wineinfo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wineinfo
      service: embeddings
  template:
    metadata:
      labels:
        app: wineinfo
        service: embeddings
    spec:
      containers:
        - name: main
          image: wineinfo-python:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              "fastapi",
              "run",
              "/app/embeddings_app.py",
              "--host",
              "0.0.0.0",
              "--port",
              "80",
            ]
          envFrom:
            - configMapRef:
                name: wineinfo-config
---
apiVersion: v1
kind: Service
metadata:
  name: wineinfo-embeddings
spec:
  type: ClusterIP
  selector:
    app: wineinfo
    service: embeddings
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wineinfo-search
  labels:
    app: wineinfo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wineinfo
      service: search
  template:
    metadata:
      labels:
        app: wineinfo
        service: search
    spec:
      containers:
        - name: main
          image: wineinfo-python:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              "fastapi",
              "run",
              "/app/search_app.py",
              "--host",
              "0.0.0.0",
              "--port",
              "80",
            ]
          envFrom:
            - configMapRef:
                name: wineinfo-config
---
apiVersion: v1
kind: Service
metadata:
  name: wineinfo-search
spec:
  type: ClusterIP
  selector:
    app: wineinfo
    service: search
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wineinfo-sommelier
  labels:
    app: wineinfo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wineinfo
      service: sommelier
  template:
    metadata:
      labels:
        app: wineinfo
        service: sommelier
    spec:
      containers:
        - name: main
          image: wineinfo-python:latest
          imagePullPolicy: IfNotPresent
          command:
            [
              "fastapi",
              "run",
              "/app/sommelier_app.py",
              "--host",
              "0.0.0.0",
              "--port",
              "80",
            ]
          envFrom:
            - configMapRef:
                name: wineinfo-config
          env:
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-api-key
                  key: OPENAI_API_KEY
                  optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: wineinfo-sommelier
spec:
  type: ClusterIP
  selector:
    app: wineinfo
    service: sommelier
  ports:
    - port: 80